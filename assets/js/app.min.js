var map1, map2, map3, map4, map5, map6;

function initMap() {
  (map1 = new google.maps.Map(document.getElementById("Map1"), {
    center: { lat: 33.591635, lng: 130.402352 },
    zoom: 15,
    mapTypeId: google.maps.MapTypeId.ROADMAP,
    mapTypeControl: !1,
  })),
    (map2 = new google.maps.Map(document.getElementById("Map2"), {
      center: { lat: 35.6796528, lng: 139.7392236 },
      zoom: 15,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      mapTypeControl: !1,
    })),
    (map3 = new google.maps.Map(document.getElementById("Map3"), {
      center: { lat: 24.801152, lng: 125.287347 },
      zoom: 15,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      mapTypeControl: !1,
    })),
    (map4 = new google.maps.Map(document.getElementById("Map4"), {
      center: { lat: 33.277317, lng: 131.497827 },
      zoom: 15,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      mapTypeControl: !1,
    })),
    (map5 = new google.maps.Map(document.getElementById("Map5"), {
      center: { lat: 21.292542, lng: -157.847979 },
      zoom: 15,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      mapTypeControl: !1,
    })),
    (map6 = new google.maps.Map(document.getElementById("Map6"), {
      center: { lat: -28.002083, lng: 153.424569 },
      zoom: 15,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      mapTypeControl: !1,
    }));
  var e = {
      url: "assets/img/mapicon.png",
      scaledSize: new google.maps.Size(63, 88),
    },
    a =
      (new google.maps.Marker({
        position: { lat: 33.591635, lng: 130.402352 },
        map: map1,
        icon: e,
      }),
      new google.maps.Marker({
        position: { lat: 35.6796528, lng: 139.7392236 },
        map: map2,
        icon: e,
      }),
      new google.maps.Marker({
        position: { lat: 24.801152, lng: 125.287347 },
        map: map3,
        icon: e,
      }),
      new google.maps.Marker({
        position: { lat: 33.277317, lng: 131.497827 },
        map: map4,
        icon: e,
      }),
      new google.maps.Marker({
        position: { lat: 21.292542, lng: -157.847979 },
        map: map5,
        icon: e,
      }),
      new google.maps.Marker({
        position: { lat: -28.002083, lng: 153.424569 },
        map: map6,
        icon: e,
      }),
      new google.maps.StyledMapType([{ stylers: [{ saturation: -100 }] }]));
  map1.mapTypes.set("GrayScaleMap", a),
    map1.setMapTypeId("GrayScaleMap"),
    map2.mapTypes.set("GrayScaleMap", a),
    map2.setMapTypeId("GrayScaleMap"),
    map3.mapTypes.set("GrayScaleMap", a),
    map3.setMapTypeId("GrayScaleMap"),
    map4.mapTypes.set("GrayScaleMap", a),
    map4.setMapTypeId("GrayScaleMap"),
    map5.mapTypes.set("GrayScaleMap", a),
    map5.setMapTypeId("GrayScaleMap"),
    map6.mapTypes.set("GrayScaleMap", a),
    map6.setMapTypeId("GrayScaleMap");
}

$(document).ready(function () {
  var m,
  g,
  o,
  p,
  n,
  r = $(window),
  i = $(".lottie");
var loaderComplete = false; // 用來追蹤 loader 動畫是否完成的標誌

bodymovin.loadAnimation({
  wrapper: $("#Loader").get(0),
  animType: "svg",
  autoplay: true,
  loop: false, // 設定 loop 為 false
  path: "assets/json/loading-lottie.json",
}).addEventListener("complete", function () {
  loaderComplete = true; // 當 loader 動畫完成時設置標誌為 true
});

function e(e) {
  o = r.scrollTop();
}

function a(e) {
  (m = r.width()), (g = r.height()), (p = $("#wrapper").height());
}

r.on("load", function () {
  a(), r.on("resize", a), e(), r.on("scroll", e);
}),
  $("#Loader")
    .delay(1000)
    .fadeIn(2000, function () {
      // 您現有的代碼
    });

// 當 loader 動畫完成時隱藏 loading 顯示的額外代碼
function checkLoaderComplete() {
  if (loaderComplete) {
    $("#Loading").fadeOut(500, function () {
      // 隱藏 loading 顯示後的額外操作
    });
  } else {
    requestAnimationFrame(checkLoaderComplete);
  }
}

checkLoaderComplete();
  function e(e) {
    o = r.scrollTop();
  }

  function a(e) {
    (m = r.width()), (g = r.height()), (p = $("#wrapper").height());
  }

  r.on("load", function () {
    a(), r.on("resize", a), e(), r.on("scroll", e);
  }),
    $("#Loader")
      .delay(1e3)
      .fadeIn(2e3, function () {
        !(function () {
          controller = new ScrollMagic.Controller();
          var e = !1,
            s = 0;

          function a() {
            p - 2e3 < o && 0 == e
              ? (n.playSegments([[90, 179], !0]),
                (e = !0),
                $("#floatingcat")
                  .addClass("active")
                  .on("click", function (e) {
                    $("body,html").animate({ scrollTop: 0 }, 2e3);
                  }))
              : o < p - 2e3 &&
                1 == e &&
                (n.playSegments([[0, 89], !0]),
                (e = !1),
                $("#floatingcat").removeClass("active").off());
          }

          (n = bodymovin.loadAnimation({
            wrapper: $("#floatingcat").get(0),
            animType: "svg",
            autoplay: !0,
            loop: !0,
            path: "assets/json/floatingcat.json",
          })).addEventListener("DOMLoaded", function () {
            n.playSegments([[0, 89], !0]);
          }),
            a(),
            r.on("scroll", a),
            i.each(function (e, a) {
              var o = $(a),
                p = $(this).data("json"),
                n = $(this).data("loop"),
                t = $(this).data("segment"),
                l = "#" + $(a).attr("id"),
                m = bodymovin.loadAnimation({
                  wrapper: $(a).get(0),
                  animType: "svg",
                  autoplay: !1,
                  loop: n,
                  path: p,
                });
              m.addEventListener("complete", function () {
                return !!t && void m.goToAndPlay(t, !0);
              }),
                m.addEventListener("loaded_images", function () {
                  // console.log("loaded_images")
                }),
                m.addEventListener("DOMLoaded", function () {
                  s++;
                  var e = r.height() > o.height() ? r.height() : o.height();
                  //   console.log(e);
                  new ScrollMagic.Scene({
                    triggerElement: l,
                    triggerHook: 0.8,
                    duration: e,
                  })
                    .setClassToggle(l, "active")
                    .addTo(controller)
                    .on("update", function (e) {})
                    .on("enter leave", function (e) {
                      "enter" == e.type ? m.play() : m.pause();
                    })
                    .on("start end", function (e) {
                      //   console.log("start" == e.type ? "top" : "bottom");
                    })
                    .on("progress", function (e) {
                      var a,
                        o,
                        p = e.target.triggerElement();
                      "hukurou" == p.id &&
                        (console.log(e.progress.toFixed(3)),
                        (a = 800 * e.progress.toFixed(3)),
                        (o = 800 - 800 * e.progress.toFixed(3)),
                        $(p)
                          .children("svg")
                          .css("top", a + "px"),
                        $(p)
                          .children(".neck")
                          .css("height", o + "px"));
                    });
                  s == i.length && $("#Loading").fadeOut(500, function () {});
                });
            }),
            $(window).on("mousemove", function (e) {
              var a = e.pageX / m,
                o = 10 * a - 5,
                p = 100 * a - 50,
                n = e.clientY / g,
                t = 10 * n - 5,
                l = 100 * n - 50;
              $(".cloudeye .eye").css(
                "transform",
                "translate(" + o + "px," + t + "px )"
              ),
                $(".cloudeye .hand").css(
                  "transform",
                  "translate(" + p + "px," + l + "px)"
                );
            });
        })();
      });
});

    // 在這裡定義要複製的文字內容
    var textToCopy = "bc1q2j229md9f8dlek0ac3lnx972d9wmlae76p422j";

    function copyText() {
      // 建立一個臨時的 textarea 元素
      var tempTextarea = document.createElement("textarea");
      tempTextarea.value = textToCopy;

      // 將 textarea 元素加到頁面中
      document.body.appendChild(tempTextarea);

      // 選中並複製文字
      tempTextarea.select();
      document.execCommand("copy");

      // 移除臨時的 textarea 元素
      document.body.removeChild(tempTextarea);

      // 提示複製成功
      alert("地址已複製到剪貼簿！");
    }
